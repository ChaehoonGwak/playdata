2579

문제
계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. <그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데
계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.

<그림 1>

예를 들어 <그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.

<그림 2>

계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 
첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

입력
입력의 첫째 줄에 계단의 개수가 주어진다.

둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

출력
첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.



import sys
input = sys.stdin.readline

N = int(input())
steps = [int(input()) for _ in range(N)]
steps.reverse() # 맨 마지막 계단을 밟아야 하므로 리스트 뒤집음

dp = []
dp.append(steps[0]) # 마지막 계단 삽입
for i in range(1, N): 
    if i < 3:
        dp.append(steps[0]+steps[i]) # dp가 3칸 들어가 있어야 하므로 마지막계단-2까지 추가해줌
    else:
        dp.append(max(steps[i] + steps[i-1] + dp[i-3], steps[i] + dp[i-2])) # 연속된 3칸을 밟을 수 없으므로 i번쨰,i-1번째, i-3번째의 합과 i번째와 i-2번째 합을 비교하여 dp에 삽입

print(max(dp[N-2],dp[N-1])) # 첫번째 계단을 밟은 경우와 안밟은 경우를 비교하여 최댓값 출력
